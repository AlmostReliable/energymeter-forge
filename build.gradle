buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
  id "com.matthewprenger.cursegradle" version "1.4.0"
  id "org.sonarqube" version "3.2.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

sonarqube {
  properties {
    property "sonar.projectKey", "RLNT_minecraft_energymeter"
    property "sonar.organization", "rlnt"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

version = "${minecraft_version}-${mod_version}"
group = "${mod_base_package}.${mod_id}"
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            // data generation
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

// resources from data generation
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'Cursemaven'
        url 'https://www.cursemaven.com/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    runtimeOnly fg.deobf("curse.maven:jei-238222:3438494") // JEI - 7.7.1.121
    runtimeOnly fg.deobf("curse.maven:top-245211:3319255") // TOP - 3.1.4
    runtimeOnly fg.deobf("curse.maven:lollipop-347954:3232534") // Lollipop - 3.2.9 - Powah Lib
    runtimeOnly fg.deobf("curse.maven:powah-352656:3232535") // Powah - 2.3.16
    runtimeOnly fg.deobf("curse.maven:pipez-443900:3460157") // Pipez - 1.2.9
    runtimeOnly fg.deobf("curse.maven:meka-268560:3206392") // Mekanism - 10.0.21.448
    runtimeOnly fg.deobf("curse.maven:mekag-268566:3206395") // Mekanism Generators - 10.0.21.448
}

// This block of code expands all the gradle properties in the specified resource targets.
// It copies them into the targets and expands all the defined properties.
def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/bin/main/"]
def replaceProperties = [mod_id: mod_id, mod_name: mod_name, mod_version: mod_version,
        mod_authors: mod_authors, mod_description: mod_description,
        minecraft_version_range: minecraft_version_range, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range, github_user: github_user, github_repo: github_repo]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": mod_version,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    if (System.getenv('CF_API_KEY') != null) {
        // GitHub actions
        apiKey = System.getenv('CF_API_KEY')
    } else {
        // error prevention
        apiKey = "none"
    }
    project {
        id = '532169'
        changelogType = 'markdown'
        changelog = 'The whole changelog can be found [here](https://github.com/RLNT/minecraft_energymeter/blob/main/CHANGELOG.md).'
        releaseType = 'release'
        addGameVersion '1.16.5'

        mainArtifact(jar) {
            displayName = "EnergyMeter-${mod_version}"
        }
    }
}

jar.finalizedBy('reobfJar')
